name: Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install Dependencies
        run: |
          pnpm install --frozen-lockfile
          # 单独安装最新版 Wrangler 避免冲突
          npm install --no-save wrangler@latest

      - name: Verify Pages Project
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "验证 Pages 项目状态..."
          npx wrangler pages project list | grep "${{ secrets.PROJECT_NAME }}" || echo "项目不存在"

      - name: Run deploy with retries
        id: deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          # 其他环境变量...
        run: |
          max_retries=3
          attempt=1
          
          while [ $attempt -le $max_retries ]; do
            echo "⌛ 尝试部署 (第 $attempt 次/$max_retries)"
            
            # 使用 npx 确保调用的是最新安装的 wrangler
            if npx wrangler pages project list | grep -q "$PROJECT_NAME"; then
              echo "✅ 项目已存在"
            else
              echo "🆕 创建 Pages 项目..."
              npx wrangler pages project create "$PROJECT_NAME" --production-branch=main || true
            fi
            
            # 执行部署
            if pnpm dlx tsx scripts/deploy/index.ts; then
              echo "✅ 部署成功"
              exit 0
            else
              echo "⚠️ 部署失败，等待 15 秒后重试..."
              sleep 15
              ((attempt++))
            fi
          done
          
          echo "❌ 已达到最大重试次数，部署失败"
          exit 1

      - name: Debug on failure
        if: failure()
        run: |
          echo "=== 调试信息 ==="
          echo "PROJECT_NAME: ${{ secrets.PROJECT_NAME }}"
          echo "CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          echo "Wrangler 版本: $(npx wrangler --version)"
          echo "当前目录: $(pwd)"
          echo "环境文件内容:"
          cat .env.runtime || echo "无.env.runtime文件"
          echo "Wrangler 日志:"
          cat ~/.config/.wrangler/logs/wrangler-*.log || echo "无Wrangler日志"

      - name: Cleanup
        run: |
          rm -f .env*.*
          rm -f wrangler*.json
